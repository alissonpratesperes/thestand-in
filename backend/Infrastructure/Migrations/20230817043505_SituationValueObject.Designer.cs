// <auto-generated />
using System;
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230817043505_SituationValueObject")]
    partial class SituationValueObject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Domain.Requested.Models.Prospect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Birth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Goal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prospects");
                });

            modelBuilder.Entity("Domain.Requester.Models.Date", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Contribution")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Displacement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProspectId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProspectId");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("Domain.Requested.Models.Prospect", b =>
                {
                    b.OwnsOne("Domain.Shared.ValueObjects.Situation", "Status", b1 =>
                        {
                            b1.Property<Guid>("ProspectId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("Active")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("Available")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ProspectId");

                            b1.ToTable("Prospects");

                            b1.WithOwner()
                                .HasForeignKey("ProspectId");
                        });

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Requester.Models.Date", b =>
                {
                    b.HasOne("Domain.Requested.Models.Prospect", "Prospect")
                        .WithMany("Dates")
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.Shared.ValueObjects.Coordinate", "Location", b1 =>
                        {
                            b1.Property<Guid>("DateId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("DateId");

                            b1.ToTable("Dates");

                            b1.WithOwner()
                                .HasForeignKey("DateId");
                        });

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Prospect");
                });

            modelBuilder.Entity("Domain.Requested.Models.Prospect", b =>
                {
                    b.Navigation("Dates");
                });
#pragma warning restore 612, 618
        }
    }
}
